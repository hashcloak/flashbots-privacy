import ml, sys

if len(program.args) < 2:
   print("You need to identify a concrete network such as 'v1_0.25_128'.",
         file=sys.stderr)
   print("Refer to https://github.com/anderspkd/SecureQ8 for scripts to run "
         "this benchmark.", file=sys.stderr)
   exit(1)

network = program.args[1]

if len(program.args) > 2:
   if program.args[2] == '1':
      program.use_trunc_pr = True
   elif program.args[2] == '2':
      squant.round_nearest = True
   elif program.args[2] == '3':
      program.use_trunc_pr = True
      program.use_edabit(True) 
   elif program.args[2] == '4':
      program.use_edabit(True)
      program.use_dabit = True
   elif program.args[2] == '5':
      squant.round_nearest = True
      program.use_edabit(True)
   elif program.args[2] == '6':
      program.use_edabit(True)
      program.use_dabit = False
   elif program.args[2] == '7':
      program.use_edabit(True)
      program.use_trunc_pr = True
   elif not program.args[2] == '0':
      raise Exception('option invalid')

if program.options.ring:
   edabits = [(False, 1), (False, 29)]
   if program.args[2] == '4':
      edabits += [(True, 27), (True, 44)]
else:
   edabits = [(True, 67), (True, 44), (True, 28), (True, 41)]
program.use_edabit_for = lambda *args: args in edabits

ml.QuantBase.n_threads = 8

if 'conv2ds' in program.args:
   ml.ConvBase.use_conv2ds = True

if 'split' in program.args:
   program.use_split(3)

if 'split2' in program.args:
   program.use_split(2)

if 'cisc' in program.args:
   program.options.cisc = True

if len(program.args) > 3:
   ml.QuantBase.n_threads = int(program.args[3])

program.disable_memory_warnings()

from ml import *

if network == 'v1_0.25_128':
	layers = [
		QuantConv2d((1, 128, 128, 3), (8, 3, 3, 3), (8,), (1, 64, 64, 8), (2, 2)),
		QuantDepthwiseConv2d((1, 64, 64, 8), (1, 3, 3, 8), (8,), (1, 64, 64, 8), (1, 1)),
		QuantConv2d((1, 64, 64, 8), (16, 1, 1, 8), (16,), (1, 64, 64, 16), (1, 1)),
		QuantDepthwiseConv2d((1, 64, 64, 16), (1, 3, 3, 16), (16,), (1, 32, 32, 16), (2, 2)),
		QuantConv2d((1, 32, 32, 16), (32, 1, 1, 16), (32,), (1, 32, 32, 32), (1, 1)),
		QuantDepthwiseConv2d((1, 32, 32, 32), (1, 3, 3, 32), (32,), (1, 32, 32, 32), (1, 1)),
		QuantConv2d((1, 32, 32, 32), (32, 1, 1, 32), (32,), (1, 32, 32, 32), (1, 1)),
		QuantDepthwiseConv2d((1, 32, 32, 32), (1, 3, 3, 32), (32,), (1, 16, 16, 32), (2, 2)),
		QuantConv2d((1, 16, 16, 32), (64, 1, 1, 32), (64,), (1, 16, 16, 64), (1, 1)),
		QuantDepthwiseConv2d((1, 16, 16, 64), (1, 3, 3, 64), (64,), (1, 16, 16, 64), (1, 1)),
		QuantConv2d((1, 16, 16, 64), (64, 1, 1, 64), (64,), (1, 16, 16, 64), (1, 1)),
		QuantDepthwiseConv2d((1, 16, 16, 64), (1, 3, 3, 64), (64,), (1, 8, 8, 64), (2, 2)),
		QuantConv2d((1, 8, 8, 64), (128, 1, 1, 64), (128,), (1, 8, 8, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 8, 8, 128), (1, 3, 3, 128), (128,), (1, 8, 8, 128), (1, 1)),
		QuantConv2d((1, 8, 8, 128), (128, 1, 1, 128), (128,), (1, 8, 8, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 8, 8, 128), (1, 3, 3, 128), (128,), (1, 8, 8, 128), (1, 1)),
		QuantConv2d((1, 8, 8, 128), (128, 1, 1, 128), (128,), (1, 8, 8, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 8, 8, 128), (1, 3, 3, 128), (128,), (1, 8, 8, 128), (1, 1)),
		QuantConv2d((1, 8, 8, 128), (128, 1, 1, 128), (128,), (1, 8, 8, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 8, 8, 128), (1, 3, 3, 128), (128,), (1, 8, 8, 128), (1, 1)),
		QuantConv2d((1, 8, 8, 128), (128, 1, 1, 128), (128,), (1, 8, 8, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 8, 8, 128), (1, 3, 3, 128), (128,), (1, 8, 8, 128), (1, 1)),
		QuantConv2d((1, 8, 8, 128), (128, 1, 1, 128), (128,), (1, 8, 8, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 8, 8, 128), (1, 3, 3, 128), (128,), (1, 4, 4, 128), (2, 2)),
		QuantConv2d((1, 4, 4, 128), (256, 1, 1, 128), (256,), (1, 4, 4, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 4, 4, 256), (1, 3, 3, 256), (256,), (1, 4, 4, 256), (1, 1)),
		QuantConv2d((1, 4, 4, 256), (256, 1, 1, 256), (256,), (1, 4, 4, 256), (1, 1)),
		QuantAveragePool2d((1, 4, 4, 256), (1, 1, 1, 256), (4, 4)),
		QuantConv2d((1, 1, 1, 256), (1001, 1, 1, 256), (1001,), (1, 1, 1, 1001), (1, 1)),
		QuantReshape((1, 1, 1, 1001), (2,), (1, 1001)),
		QuantSoftmax((1, 1001), (1, 1001))
	]
if network == 'v1_0.25_160':
	layers = [
		QuantConv2d((1, 160, 160, 3), (8, 3, 3, 3), (8,), (1, 80, 80, 8), (2, 2)),
		QuantDepthwiseConv2d((1, 80, 80, 8), (1, 3, 3, 8), (8,), (1, 80, 80, 8), (1, 1)),
		QuantConv2d((1, 80, 80, 8), (16, 1, 1, 8), (16,), (1, 80, 80, 16), (1, 1)),
		QuantDepthwiseConv2d((1, 80, 80, 16), (1, 3, 3, 16), (16,), (1, 40, 40, 16), (2, 2)),
		QuantConv2d((1, 40, 40, 16), (32, 1, 1, 16), (32,), (1, 40, 40, 32), (1, 1)),
		QuantDepthwiseConv2d((1, 40, 40, 32), (1, 3, 3, 32), (32,), (1, 40, 40, 32), (1, 1)),
		QuantConv2d((1, 40, 40, 32), (32, 1, 1, 32), (32,), (1, 40, 40, 32), (1, 1)),
		QuantDepthwiseConv2d((1, 40, 40, 32), (1, 3, 3, 32), (32,), (1, 20, 20, 32), (2, 2)),
		QuantConv2d((1, 20, 20, 32), (64, 1, 1, 32), (64,), (1, 20, 20, 64), (1, 1)),
		QuantDepthwiseConv2d((1, 20, 20, 64), (1, 3, 3, 64), (64,), (1, 20, 20, 64), (1, 1)),
		QuantConv2d((1, 20, 20, 64), (64, 1, 1, 64), (64,), (1, 20, 20, 64), (1, 1)),
		QuantDepthwiseConv2d((1, 20, 20, 64), (1, 3, 3, 64), (64,), (1, 10, 10, 64), (2, 2)),
		QuantConv2d((1, 10, 10, 64), (128, 1, 1, 64), (128,), (1, 10, 10, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 10, 10, 128), (1, 3, 3, 128), (128,), (1, 10, 10, 128), (1, 1)),
		QuantConv2d((1, 10, 10, 128), (128, 1, 1, 128), (128,), (1, 10, 10, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 10, 10, 128), (1, 3, 3, 128), (128,), (1, 10, 10, 128), (1, 1)),
		QuantConv2d((1, 10, 10, 128), (128, 1, 1, 128), (128,), (1, 10, 10, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 10, 10, 128), (1, 3, 3, 128), (128,), (1, 10, 10, 128), (1, 1)),
		QuantConv2d((1, 10, 10, 128), (128, 1, 1, 128), (128,), (1, 10, 10, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 10, 10, 128), (1, 3, 3, 128), (128,), (1, 10, 10, 128), (1, 1)),
		QuantConv2d((1, 10, 10, 128), (128, 1, 1, 128), (128,), (1, 10, 10, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 10, 10, 128), (1, 3, 3, 128), (128,), (1, 10, 10, 128), (1, 1)),
		QuantConv2d((1, 10, 10, 128), (128, 1, 1, 128), (128,), (1, 10, 10, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 10, 10, 128), (1, 3, 3, 128), (128,), (1, 5, 5, 128), (2, 2)),
		QuantConv2d((1, 5, 5, 128), (256, 1, 1, 128), (256,), (1, 5, 5, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 5, 5, 256), (1, 3, 3, 256), (256,), (1, 5, 5, 256), (1, 1)),
		QuantConv2d((1, 5, 5, 256), (256, 1, 1, 256), (256,), (1, 5, 5, 256), (1, 1)),
		QuantAveragePool2d((1, 5, 5, 256), (1, 1, 1, 256), (5, 5)),
		QuantConv2d((1, 1, 1, 256), (1001, 1, 1, 256), (1001,), (1, 1, 1, 1001), (1, 1)),
		QuantReshape((1, 1, 1, 1001), (2,), (1, 1001)),
		QuantSoftmax((1, 1001), (1, 1001))
	]
if network == 'v1_0.25_192':
	layers = [
		QuantConv2d((1, 192, 192, 3), (8, 3, 3, 3), (8,), (1, 96, 96, 8), (2, 2)),
		QuantDepthwiseConv2d((1, 96, 96, 8), (1, 3, 3, 8), (8,), (1, 96, 96, 8), (1, 1)),
		QuantConv2d((1, 96, 96, 8), (16, 1, 1, 8), (16,), (1, 96, 96, 16), (1, 1)),
		QuantDepthwiseConv2d((1, 96, 96, 16), (1, 3, 3, 16), (16,), (1, 48, 48, 16), (2, 2)),
		QuantConv2d((1, 48, 48, 16), (32, 1, 1, 16), (32,), (1, 48, 48, 32), (1, 1)),
		QuantDepthwiseConv2d((1, 48, 48, 32), (1, 3, 3, 32), (32,), (1, 48, 48, 32), (1, 1)),
		QuantConv2d((1, 48, 48, 32), (32, 1, 1, 32), (32,), (1, 48, 48, 32), (1, 1)),
		QuantDepthwiseConv2d((1, 48, 48, 32), (1, 3, 3, 32), (32,), (1, 24, 24, 32), (2, 2)),
		QuantConv2d((1, 24, 24, 32), (64, 1, 1, 32), (64,), (1, 24, 24, 64), (1, 1)),
		QuantDepthwiseConv2d((1, 24, 24, 64), (1, 3, 3, 64), (64,), (1, 24, 24, 64), (1, 1)),
		QuantConv2d((1, 24, 24, 64), (64, 1, 1, 64), (64,), (1, 24, 24, 64), (1, 1)),
		QuantDepthwiseConv2d((1, 24, 24, 64), (1, 3, 3, 64), (64,), (1, 12, 12, 64), (2, 2)),
		QuantConv2d((1, 12, 12, 64), (128, 1, 1, 64), (128,), (1, 12, 12, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 12, 12, 128), (1, 3, 3, 128), (128,), (1, 12, 12, 128), (1, 1)),
		QuantConv2d((1, 12, 12, 128), (128, 1, 1, 128), (128,), (1, 12, 12, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 12, 12, 128), (1, 3, 3, 128), (128,), (1, 12, 12, 128), (1, 1)),
		QuantConv2d((1, 12, 12, 128), (128, 1, 1, 128), (128,), (1, 12, 12, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 12, 12, 128), (1, 3, 3, 128), (128,), (1, 12, 12, 128), (1, 1)),
		QuantConv2d((1, 12, 12, 128), (128, 1, 1, 128), (128,), (1, 12, 12, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 12, 12, 128), (1, 3, 3, 128), (128,), (1, 12, 12, 128), (1, 1)),
		QuantConv2d((1, 12, 12, 128), (128, 1, 1, 128), (128,), (1, 12, 12, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 12, 12, 128), (1, 3, 3, 128), (128,), (1, 12, 12, 128), (1, 1)),
		QuantConv2d((1, 12, 12, 128), (128, 1, 1, 128), (128,), (1, 12, 12, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 12, 12, 128), (1, 3, 3, 128), (128,), (1, 6, 6, 128), (2, 2)),
		QuantConv2d((1, 6, 6, 128), (256, 1, 1, 128), (256,), (1, 6, 6, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 6, 6, 256), (1, 3, 3, 256), (256,), (1, 6, 6, 256), (1, 1)),
		QuantConv2d((1, 6, 6, 256), (256, 1, 1, 256), (256,), (1, 6, 6, 256), (1, 1)),
		QuantAveragePool2d((1, 6, 6, 256), (1, 1, 1, 256), (6, 6)),
		QuantConv2d((1, 1, 1, 256), (1001, 1, 1, 256), (1001,), (1, 1, 1, 1001), (1, 1)),
		QuantReshape((1, 1, 1, 1001), (2,), (1, 1001)),
		QuantSoftmax((1, 1001), (1, 1001))
	]
if network == 'v1_0.25_224':
	layers = [
		QuantConv2d((1, 224, 224, 3), (8, 3, 3, 3), (8,), (1, 112, 112, 8), (2, 2)),
		QuantDepthwiseConv2d((1, 112, 112, 8), (1, 3, 3, 8), (8,), (1, 112, 112, 8), (1, 1)),
		QuantConv2d((1, 112, 112, 8), (16, 1, 1, 8), (16,), (1, 112, 112, 16), (1, 1)),
		QuantDepthwiseConv2d((1, 112, 112, 16), (1, 3, 3, 16), (16,), (1, 56, 56, 16), (2, 2)),
		QuantConv2d((1, 56, 56, 16), (32, 1, 1, 16), (32,), (1, 56, 56, 32), (1, 1)),
		QuantDepthwiseConv2d((1, 56, 56, 32), (1, 3, 3, 32), (32,), (1, 56, 56, 32), (1, 1)),
		QuantConv2d((1, 56, 56, 32), (32, 1, 1, 32), (32,), (1, 56, 56, 32), (1, 1)),
		QuantDepthwiseConv2d((1, 56, 56, 32), (1, 3, 3, 32), (32,), (1, 28, 28, 32), (2, 2)),
		QuantConv2d((1, 28, 28, 32), (64, 1, 1, 32), (64,), (1, 28, 28, 64), (1, 1)),
		QuantDepthwiseConv2d((1, 28, 28, 64), (1, 3, 3, 64), (64,), (1, 28, 28, 64), (1, 1)),
		QuantConv2d((1, 28, 28, 64), (64, 1, 1, 64), (64,), (1, 28, 28, 64), (1, 1)),
		QuantDepthwiseConv2d((1, 28, 28, 64), (1, 3, 3, 64), (64,), (1, 14, 14, 64), (2, 2)),
		QuantConv2d((1, 14, 14, 64), (128, 1, 1, 64), (128,), (1, 14, 14, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 14, 14, 128), (1, 3, 3, 128), (128,), (1, 14, 14, 128), (1, 1)),
		QuantConv2d((1, 14, 14, 128), (128, 1, 1, 128), (128,), (1, 14, 14, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 14, 14, 128), (1, 3, 3, 128), (128,), (1, 14, 14, 128), (1, 1)),
		QuantConv2d((1, 14, 14, 128), (128, 1, 1, 128), (128,), (1, 14, 14, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 14, 14, 128), (1, 3, 3, 128), (128,), (1, 14, 14, 128), (1, 1)),
		QuantConv2d((1, 14, 14, 128), (128, 1, 1, 128), (128,), (1, 14, 14, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 14, 14, 128), (1, 3, 3, 128), (128,), (1, 14, 14, 128), (1, 1)),
		QuantConv2d((1, 14, 14, 128), (128, 1, 1, 128), (128,), (1, 14, 14, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 14, 14, 128), (1, 3, 3, 128), (128,), (1, 14, 14, 128), (1, 1)),
		QuantConv2d((1, 14, 14, 128), (128, 1, 1, 128), (128,), (1, 14, 14, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 14, 14, 128), (1, 3, 3, 128), (128,), (1, 7, 7, 128), (2, 2)),
		QuantConv2d((1, 7, 7, 128), (256, 1, 1, 128), (256,), (1, 7, 7, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 7, 7, 256), (1, 3, 3, 256), (256,), (1, 7, 7, 256), (1, 1)),
		QuantConv2d((1, 7, 7, 256), (256, 1, 1, 256), (256,), (1, 7, 7, 256), (1, 1)),
		QuantAveragePool2d((1, 7, 7, 256), (1, 1, 1, 256), (7, 7)),
		QuantConv2d((1, 1, 1, 256), (1001, 1, 1, 256), (1001,), (1, 1, 1, 1001), (1, 1)),
		QuantReshape((1, 1, 1, 1001), (2,), (1, 1001)),
		QuantSoftmax((1, 1001), (1, 1001))
	]
if network == 'v1_0.5_128':
	layers = [
		QuantConv2d((1, 128, 128, 3), (16, 3, 3, 3), (16,), (1, 64, 64, 16), (2, 2)),
		QuantDepthwiseConv2d((1, 64, 64, 16), (1, 3, 3, 16), (16,), (1, 64, 64, 16), (1, 1)),
		QuantConv2d((1, 64, 64, 16), (32, 1, 1, 16), (32,), (1, 64, 64, 32), (1, 1)),
		QuantDepthwiseConv2d((1, 64, 64, 32), (1, 3, 3, 32), (32,), (1, 32, 32, 32), (2, 2)),
		QuantConv2d((1, 32, 32, 32), (64, 1, 1, 32), (64,), (1, 32, 32, 64), (1, 1)),
		QuantDepthwiseConv2d((1, 32, 32, 64), (1, 3, 3, 64), (64,), (1, 32, 32, 64), (1, 1)),
		QuantConv2d((1, 32, 32, 64), (64, 1, 1, 64), (64,), (1, 32, 32, 64), (1, 1)),
		QuantDepthwiseConv2d((1, 32, 32, 64), (1, 3, 3, 64), (64,), (1, 16, 16, 64), (2, 2)),
		QuantConv2d((1, 16, 16, 64), (128, 1, 1, 64), (128,), (1, 16, 16, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 16, 16, 128), (1, 3, 3, 128), (128,), (1, 16, 16, 128), (1, 1)),
		QuantConv2d((1, 16, 16, 128), (128, 1, 1, 128), (128,), (1, 16, 16, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 16, 16, 128), (1, 3, 3, 128), (128,), (1, 8, 8, 128), (2, 2)),
		QuantConv2d((1, 8, 8, 128), (256, 1, 1, 128), (256,), (1, 8, 8, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 8, 8, 256), (1, 3, 3, 256), (256,), (1, 8, 8, 256), (1, 1)),
		QuantConv2d((1, 8, 8, 256), (256, 1, 1, 256), (256,), (1, 8, 8, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 8, 8, 256), (1, 3, 3, 256), (256,), (1, 8, 8, 256), (1, 1)),
		QuantConv2d((1, 8, 8, 256), (256, 1, 1, 256), (256,), (1, 8, 8, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 8, 8, 256), (1, 3, 3, 256), (256,), (1, 8, 8, 256), (1, 1)),
		QuantConv2d((1, 8, 8, 256), (256, 1, 1, 256), (256,), (1, 8, 8, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 8, 8, 256), (1, 3, 3, 256), (256,), (1, 8, 8, 256), (1, 1)),
		QuantConv2d((1, 8, 8, 256), (256, 1, 1, 256), (256,), (1, 8, 8, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 8, 8, 256), (1, 3, 3, 256), (256,), (1, 8, 8, 256), (1, 1)),
		QuantConv2d((1, 8, 8, 256), (256, 1, 1, 256), (256,), (1, 8, 8, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 8, 8, 256), (1, 3, 3, 256), (256,), (1, 4, 4, 256), (2, 2)),
		QuantConv2d((1, 4, 4, 256), (512, 1, 1, 256), (512,), (1, 4, 4, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 4, 4, 512), (1, 3, 3, 512), (512,), (1, 4, 4, 512), (1, 1)),
		QuantConv2d((1, 4, 4, 512), (512, 1, 1, 512), (512,), (1, 4, 4, 512), (1, 1)),
		QuantAveragePool2d((1, 4, 4, 512), (1, 1, 1, 512), (4, 4)),
		QuantConv2d((1, 1, 1, 512), (1001, 1, 1, 512), (1001,), (1, 1, 1, 1001), (1, 1)),
		QuantReshape((1, 1, 1, 1001), (2,), (1, 1001)),
		QuantSoftmax((1, 1001), (1, 1001))
	]
if network == 'v1_0.5_160':
	layers = [
		QuantConv2d((1, 160, 160, 3), (16, 3, 3, 3), (16,), (1, 80, 80, 16), (2, 2)),
		QuantDepthwiseConv2d((1, 80, 80, 16), (1, 3, 3, 16), (16,), (1, 80, 80, 16), (1, 1)),
		QuantConv2d((1, 80, 80, 16), (32, 1, 1, 16), (32,), (1, 80, 80, 32), (1, 1)),
		QuantDepthwiseConv2d((1, 80, 80, 32), (1, 3, 3, 32), (32,), (1, 40, 40, 32), (2, 2)),
		QuantConv2d((1, 40, 40, 32), (64, 1, 1, 32), (64,), (1, 40, 40, 64), (1, 1)),
		QuantDepthwiseConv2d((1, 40, 40, 64), (1, 3, 3, 64), (64,), (1, 40, 40, 64), (1, 1)),
		QuantConv2d((1, 40, 40, 64), (64, 1, 1, 64), (64,), (1, 40, 40, 64), (1, 1)),
		QuantDepthwiseConv2d((1, 40, 40, 64), (1, 3, 3, 64), (64,), (1, 20, 20, 64), (2, 2)),
		QuantConv2d((1, 20, 20, 64), (128, 1, 1, 64), (128,), (1, 20, 20, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 20, 20, 128), (1, 3, 3, 128), (128,), (1, 20, 20, 128), (1, 1)),
		QuantConv2d((1, 20, 20, 128), (128, 1, 1, 128), (128,), (1, 20, 20, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 20, 20, 128), (1, 3, 3, 128), (128,), (1, 10, 10, 128), (2, 2)),
		QuantConv2d((1, 10, 10, 128), (256, 1, 1, 128), (256,), (1, 10, 10, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 10, 10, 256), (1, 3, 3, 256), (256,), (1, 10, 10, 256), (1, 1)),
		QuantConv2d((1, 10, 10, 256), (256, 1, 1, 256), (256,), (1, 10, 10, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 10, 10, 256), (1, 3, 3, 256), (256,), (1, 10, 10, 256), (1, 1)),
		QuantConv2d((1, 10, 10, 256), (256, 1, 1, 256), (256,), (1, 10, 10, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 10, 10, 256), (1, 3, 3, 256), (256,), (1, 10, 10, 256), (1, 1)),
		QuantConv2d((1, 10, 10, 256), (256, 1, 1, 256), (256,), (1, 10, 10, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 10, 10, 256), (1, 3, 3, 256), (256,), (1, 10, 10, 256), (1, 1)),
		QuantConv2d((1, 10, 10, 256), (256, 1, 1, 256), (256,), (1, 10, 10, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 10, 10, 256), (1, 3, 3, 256), (256,), (1, 10, 10, 256), (1, 1)),
		QuantConv2d((1, 10, 10, 256), (256, 1, 1, 256), (256,), (1, 10, 10, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 10, 10, 256), (1, 3, 3, 256), (256,), (1, 5, 5, 256), (2, 2)),
		QuantConv2d((1, 5, 5, 256), (512, 1, 1, 256), (512,), (1, 5, 5, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 5, 5, 512), (1, 3, 3, 512), (512,), (1, 5, 5, 512), (1, 1)),
		QuantConv2d((1, 5, 5, 512), (512, 1, 1, 512), (512,), (1, 5, 5, 512), (1, 1)),
		QuantAveragePool2d((1, 5, 5, 512), (1, 1, 1, 512), (5, 5)),
		QuantConv2d((1, 1, 1, 512), (1001, 1, 1, 512), (1001,), (1, 1, 1, 1001), (1, 1)),
		QuantReshape((1, 1, 1, 1001), (2,), (1, 1001)),
		QuantSoftmax((1, 1001), (1, 1001))
	]
if network == 'v1_0.5_192':
	layers = [
		QuantConv2d((1, 192, 192, 3), (16, 3, 3, 3), (16,), (1, 96, 96, 16), (2, 2)),
		QuantDepthwiseConv2d((1, 96, 96, 16), (1, 3, 3, 16), (16,), (1, 96, 96, 16), (1, 1)),
		QuantConv2d((1, 96, 96, 16), (32, 1, 1, 16), (32,), (1, 96, 96, 32), (1, 1)),
		QuantDepthwiseConv2d((1, 96, 96, 32), (1, 3, 3, 32), (32,), (1, 48, 48, 32), (2, 2)),
		QuantConv2d((1, 48, 48, 32), (64, 1, 1, 32), (64,), (1, 48, 48, 64), (1, 1)),
		QuantDepthwiseConv2d((1, 48, 48, 64), (1, 3, 3, 64), (64,), (1, 48, 48, 64), (1, 1)),
		QuantConv2d((1, 48, 48, 64), (64, 1, 1, 64), (64,), (1, 48, 48, 64), (1, 1)),
		QuantDepthwiseConv2d((1, 48, 48, 64), (1, 3, 3, 64), (64,), (1, 24, 24, 64), (2, 2)),
		QuantConv2d((1, 24, 24, 64), (128, 1, 1, 64), (128,), (1, 24, 24, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 24, 24, 128), (1, 3, 3, 128), (128,), (1, 24, 24, 128), (1, 1)),
		QuantConv2d((1, 24, 24, 128), (128, 1, 1, 128), (128,), (1, 24, 24, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 24, 24, 128), (1, 3, 3, 128), (128,), (1, 12, 12, 128), (2, 2)),
		QuantConv2d((1, 12, 12, 128), (256, 1, 1, 128), (256,), (1, 12, 12, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 12, 12, 256), (1, 3, 3, 256), (256,), (1, 12, 12, 256), (1, 1)),
		QuantConv2d((1, 12, 12, 256), (256, 1, 1, 256), (256,), (1, 12, 12, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 12, 12, 256), (1, 3, 3, 256), (256,), (1, 12, 12, 256), (1, 1)),
		QuantConv2d((1, 12, 12, 256), (256, 1, 1, 256), (256,), (1, 12, 12, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 12, 12, 256), (1, 3, 3, 256), (256,), (1, 12, 12, 256), (1, 1)),
		QuantConv2d((1, 12, 12, 256), (256, 1, 1, 256), (256,), (1, 12, 12, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 12, 12, 256), (1, 3, 3, 256), (256,), (1, 12, 12, 256), (1, 1)),
		QuantConv2d((1, 12, 12, 256), (256, 1, 1, 256), (256,), (1, 12, 12, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 12, 12, 256), (1, 3, 3, 256), (256,), (1, 12, 12, 256), (1, 1)),
		QuantConv2d((1, 12, 12, 256), (256, 1, 1, 256), (256,), (1, 12, 12, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 12, 12, 256), (1, 3, 3, 256), (256,), (1, 6, 6, 256), (2, 2)),
		QuantConv2d((1, 6, 6, 256), (512, 1, 1, 256), (512,), (1, 6, 6, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 6, 6, 512), (1, 3, 3, 512), (512,), (1, 6, 6, 512), (1, 1)),
		QuantConv2d((1, 6, 6, 512), (512, 1, 1, 512), (512,), (1, 6, 6, 512), (1, 1)),
		QuantAveragePool2d((1, 6, 6, 512), (1, 1, 1, 512), (6, 6)),
		QuantConv2d((1, 1, 1, 512), (1001, 1, 1, 512), (1001,), (1, 1, 1, 1001), (1, 1)),
		QuantReshape((1, 1, 1, 1001), (2,), (1, 1001)),
		QuantSoftmax((1, 1001), (1, 1001))
	]
if network == 'v1_0.5_224':
	layers = [
		QuantConv2d((1, 224, 224, 3), (16, 3, 3, 3), (16,), (1, 112, 112, 16), (2, 2)),
		QuantDepthwiseConv2d((1, 112, 112, 16), (1, 3, 3, 16), (16,), (1, 112, 112, 16), (1, 1)),
		QuantConv2d((1, 112, 112, 16), (32, 1, 1, 16), (32,), (1, 112, 112, 32), (1, 1)),
		QuantDepthwiseConv2d((1, 112, 112, 32), (1, 3, 3, 32), (32,), (1, 56, 56, 32), (2, 2)),
		QuantConv2d((1, 56, 56, 32), (64, 1, 1, 32), (64,), (1, 56, 56, 64), (1, 1)),
		QuantDepthwiseConv2d((1, 56, 56, 64), (1, 3, 3, 64), (64,), (1, 56, 56, 64), (1, 1)),
		QuantConv2d((1, 56, 56, 64), (64, 1, 1, 64), (64,), (1, 56, 56, 64), (1, 1)),
		QuantDepthwiseConv2d((1, 56, 56, 64), (1, 3, 3, 64), (64,), (1, 28, 28, 64), (2, 2)),
		QuantConv2d((1, 28, 28, 64), (128, 1, 1, 64), (128,), (1, 28, 28, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 28, 28, 128), (1, 3, 3, 128), (128,), (1, 28, 28, 128), (1, 1)),
		QuantConv2d((1, 28, 28, 128), (128, 1, 1, 128), (128,), (1, 28, 28, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 28, 28, 128), (1, 3, 3, 128), (128,), (1, 14, 14, 128), (2, 2)),
		QuantConv2d((1, 14, 14, 128), (256, 1, 1, 128), (256,), (1, 14, 14, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 14, 14, 256), (1, 3, 3, 256), (256,), (1, 14, 14, 256), (1, 1)),
		QuantConv2d((1, 14, 14, 256), (256, 1, 1, 256), (256,), (1, 14, 14, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 14, 14, 256), (1, 3, 3, 256), (256,), (1, 14, 14, 256), (1, 1)),
		QuantConv2d((1, 14, 14, 256), (256, 1, 1, 256), (256,), (1, 14, 14, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 14, 14, 256), (1, 3, 3, 256), (256,), (1, 14, 14, 256), (1, 1)),
		QuantConv2d((1, 14, 14, 256), (256, 1, 1, 256), (256,), (1, 14, 14, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 14, 14, 256), (1, 3, 3, 256), (256,), (1, 14, 14, 256), (1, 1)),
		QuantConv2d((1, 14, 14, 256), (256, 1, 1, 256), (256,), (1, 14, 14, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 14, 14, 256), (1, 3, 3, 256), (256,), (1, 14, 14, 256), (1, 1)),
		QuantConv2d((1, 14, 14, 256), (256, 1, 1, 256), (256,), (1, 14, 14, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 14, 14, 256), (1, 3, 3, 256), (256,), (1, 7, 7, 256), (2, 2)),
		QuantConv2d((1, 7, 7, 256), (512, 1, 1, 256), (512,), (1, 7, 7, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 7, 7, 512), (1, 3, 3, 512), (512,), (1, 7, 7, 512), (1, 1)),
		QuantConv2d((1, 7, 7, 512), (512, 1, 1, 512), (512,), (1, 7, 7, 512), (1, 1)),
		QuantAveragePool2d((1, 7, 7, 512), (1, 1, 1, 512), (7, 7)),
		QuantConv2d((1, 1, 1, 512), (1001, 1, 1, 512), (1001,), (1, 1, 1, 1001), (1, 1)),
		QuantReshape((1, 1, 1, 1001), (2,), (1, 1001)),
		QuantSoftmax((1, 1001), (1, 1001))
	]
if network == 'v1_0.75_128':
	layers = [
		QuantConv2d((1, 128, 128, 3), (24, 3, 3, 3), (24,), (1, 64, 64, 24), (2, 2)),
		QuantDepthwiseConv2d((1, 64, 64, 24), (1, 3, 3, 24), (24,), (1, 64, 64, 24), (1, 1)),
		QuantConv2d((1, 64, 64, 24), (48, 1, 1, 24), (48,), (1, 64, 64, 48), (1, 1)),
		QuantDepthwiseConv2d((1, 64, 64, 48), (1, 3, 3, 48), (48,), (1, 32, 32, 48), (2, 2)),
		QuantConv2d((1, 32, 32, 48), (96, 1, 1, 48), (96,), (1, 32, 32, 96), (1, 1)),
		QuantDepthwiseConv2d((1, 32, 32, 96), (1, 3, 3, 96), (96,), (1, 32, 32, 96), (1, 1)),
		QuantConv2d((1, 32, 32, 96), (96, 1, 1, 96), (96,), (1, 32, 32, 96), (1, 1)),
		QuantDepthwiseConv2d((1, 32, 32, 96), (1, 3, 3, 96), (96,), (1, 16, 16, 96), (2, 2)),
		QuantConv2d((1, 16, 16, 96), (192, 1, 1, 96), (192,), (1, 16, 16, 192), (1, 1)),
		QuantDepthwiseConv2d((1, 16, 16, 192), (1, 3, 3, 192), (192,), (1, 16, 16, 192), (1, 1)),
		QuantConv2d((1, 16, 16, 192), (192, 1, 1, 192), (192,), (1, 16, 16, 192), (1, 1)),
		QuantDepthwiseConv2d((1, 16, 16, 192), (1, 3, 3, 192), (192,), (1, 8, 8, 192), (2, 2)),
		QuantConv2d((1, 8, 8, 192), (384, 1, 1, 192), (384,), (1, 8, 8, 384), (1, 1)),
		QuantDepthwiseConv2d((1, 8, 8, 384), (1, 3, 3, 384), (384,), (1, 8, 8, 384), (1, 1)),
		QuantConv2d((1, 8, 8, 384), (384, 1, 1, 384), (384,), (1, 8, 8, 384), (1, 1)),
		QuantDepthwiseConv2d((1, 8, 8, 384), (1, 3, 3, 384), (384,), (1, 8, 8, 384), (1, 1)),
		QuantConv2d((1, 8, 8, 384), (384, 1, 1, 384), (384,), (1, 8, 8, 384), (1, 1)),
		QuantDepthwiseConv2d((1, 8, 8, 384), (1, 3, 3, 384), (384,), (1, 8, 8, 384), (1, 1)),
		QuantConv2d((1, 8, 8, 384), (384, 1, 1, 384), (384,), (1, 8, 8, 384), (1, 1)),
		QuantDepthwiseConv2d((1, 8, 8, 384), (1, 3, 3, 384), (384,), (1, 8, 8, 384), (1, 1)),
		QuantConv2d((1, 8, 8, 384), (384, 1, 1, 384), (384,), (1, 8, 8, 384), (1, 1)),
		QuantDepthwiseConv2d((1, 8, 8, 384), (1, 3, 3, 384), (384,), (1, 8, 8, 384), (1, 1)),
		QuantConv2d((1, 8, 8, 384), (384, 1, 1, 384), (384,), (1, 8, 8, 384), (1, 1)),
		QuantDepthwiseConv2d((1, 8, 8, 384), (1, 3, 3, 384), (384,), (1, 4, 4, 384), (2, 2)),
		QuantConv2d((1, 4, 4, 384), (768, 1, 1, 384), (768,), (1, 4, 4, 768), (1, 1)),
		QuantDepthwiseConv2d((1, 4, 4, 768), (1, 3, 3, 768), (768,), (1, 4, 4, 768), (1, 1)),
		QuantConv2d((1, 4, 4, 768), (768, 1, 1, 768), (768,), (1, 4, 4, 768), (1, 1)),
		QuantAveragePool2d((1, 4, 4, 768), (1, 1, 1, 768), (4, 4)),
		QuantConv2d((1, 1, 1, 768), (1001, 1, 1, 768), (1001,), (1, 1, 1, 1001), (1, 1)),
		QuantReshape((1, 1, 1, 1001), (2,), (1, 1001)),
		QuantSoftmax((1, 1001), (1, 1001))
	]
if network == 'v1_0.75_160':
	layers = [
		QuantConv2d((1, 160, 160, 3), (24, 3, 3, 3), (24,), (1, 80, 80, 24), (2, 2)),
		QuantDepthwiseConv2d((1, 80, 80, 24), (1, 3, 3, 24), (24,), (1, 80, 80, 24), (1, 1)),
		QuantConv2d((1, 80, 80, 24), (48, 1, 1, 24), (48,), (1, 80, 80, 48), (1, 1)),
		QuantDepthwiseConv2d((1, 80, 80, 48), (1, 3, 3, 48), (48,), (1, 40, 40, 48), (2, 2)),
		QuantConv2d((1, 40, 40, 48), (96, 1, 1, 48), (96,), (1, 40, 40, 96), (1, 1)),
		QuantDepthwiseConv2d((1, 40, 40, 96), (1, 3, 3, 96), (96,), (1, 40, 40, 96), (1, 1)),
		QuantConv2d((1, 40, 40, 96), (96, 1, 1, 96), (96,), (1, 40, 40, 96), (1, 1)),
		QuantDepthwiseConv2d((1, 40, 40, 96), (1, 3, 3, 96), (96,), (1, 20, 20, 96), (2, 2)),
		QuantConv2d((1, 20, 20, 96), (192, 1, 1, 96), (192,), (1, 20, 20, 192), (1, 1)),
		QuantDepthwiseConv2d((1, 20, 20, 192), (1, 3, 3, 192), (192,), (1, 20, 20, 192), (1, 1)),
		QuantConv2d((1, 20, 20, 192), (192, 1, 1, 192), (192,), (1, 20, 20, 192), (1, 1)),
		QuantDepthwiseConv2d((1, 20, 20, 192), (1, 3, 3, 192), (192,), (1, 10, 10, 192), (2, 2)),
		QuantConv2d((1, 10, 10, 192), (384, 1, 1, 192), (384,), (1, 10, 10, 384), (1, 1)),
		QuantDepthwiseConv2d((1, 10, 10, 384), (1, 3, 3, 384), (384,), (1, 10, 10, 384), (1, 1)),
		QuantConv2d((1, 10, 10, 384), (384, 1, 1, 384), (384,), (1, 10, 10, 384), (1, 1)),
		QuantDepthwiseConv2d((1, 10, 10, 384), (1, 3, 3, 384), (384,), (1, 10, 10, 384), (1, 1)),
		QuantConv2d((1, 10, 10, 384), (384, 1, 1, 384), (384,), (1, 10, 10, 384), (1, 1)),
		QuantDepthwiseConv2d((1, 10, 10, 384), (1, 3, 3, 384), (384,), (1, 10, 10, 384), (1, 1)),
		QuantConv2d((1, 10, 10, 384), (384, 1, 1, 384), (384,), (1, 10, 10, 384), (1, 1)),
		QuantDepthwiseConv2d((1, 10, 10, 384), (1, 3, 3, 384), (384,), (1, 10, 10, 384), (1, 1)),
		QuantConv2d((1, 10, 10, 384), (384, 1, 1, 384), (384,), (1, 10, 10, 384), (1, 1)),
		QuantDepthwiseConv2d((1, 10, 10, 384), (1, 3, 3, 384), (384,), (1, 10, 10, 384), (1, 1)),
		QuantConv2d((1, 10, 10, 384), (384, 1, 1, 384), (384,), (1, 10, 10, 384), (1, 1)),
		QuantDepthwiseConv2d((1, 10, 10, 384), (1, 3, 3, 384), (384,), (1, 5, 5, 384), (2, 2)),
		QuantConv2d((1, 5, 5, 384), (768, 1, 1, 384), (768,), (1, 5, 5, 768), (1, 1)),
		QuantDepthwiseConv2d((1, 5, 5, 768), (1, 3, 3, 768), (768,), (1, 5, 5, 768), (1, 1)),
		QuantConv2d((1, 5, 5, 768), (768, 1, 1, 768), (768,), (1, 5, 5, 768), (1, 1)),
		QuantAveragePool2d((1, 5, 5, 768), (1, 1, 1, 768), (5, 5)),
		QuantConv2d((1, 1, 1, 768), (1001, 1, 1, 768), (1001,), (1, 1, 1, 1001), (1, 1)),
		QuantReshape((1, 1, 1, 1001), (2,), (1, 1001)),
		QuantSoftmax((1, 1001), (1, 1001))
	]
if network == 'v1_0.75_192':
	layers = [
		QuantConv2d((1, 192, 192, 3), (24, 3, 3, 3), (24,), (1, 96, 96, 24), (2, 2)),
		QuantDepthwiseConv2d((1, 96, 96, 24), (1, 3, 3, 24), (24,), (1, 96, 96, 24), (1, 1)),
		QuantConv2d((1, 96, 96, 24), (48, 1, 1, 24), (48,), (1, 96, 96, 48), (1, 1)),
		QuantDepthwiseConv2d((1, 96, 96, 48), (1, 3, 3, 48), (48,), (1, 48, 48, 48), (2, 2)),
		QuantConv2d((1, 48, 48, 48), (96, 1, 1, 48), (96,), (1, 48, 48, 96), (1, 1)),
		QuantDepthwiseConv2d((1, 48, 48, 96), (1, 3, 3, 96), (96,), (1, 48, 48, 96), (1, 1)),
		QuantConv2d((1, 48, 48, 96), (96, 1, 1, 96), (96,), (1, 48, 48, 96), (1, 1)),
		QuantDepthwiseConv2d((1, 48, 48, 96), (1, 3, 3, 96), (96,), (1, 24, 24, 96), (2, 2)),
		QuantConv2d((1, 24, 24, 96), (192, 1, 1, 96), (192,), (1, 24, 24, 192), (1, 1)),
		QuantDepthwiseConv2d((1, 24, 24, 192), (1, 3, 3, 192), (192,), (1, 24, 24, 192), (1, 1)),
		QuantConv2d((1, 24, 24, 192), (192, 1, 1, 192), (192,), (1, 24, 24, 192), (1, 1)),
		QuantDepthwiseConv2d((1, 24, 24, 192), (1, 3, 3, 192), (192,), (1, 12, 12, 192), (2, 2)),
		QuantConv2d((1, 12, 12, 192), (384, 1, 1, 192), (384,), (1, 12, 12, 384), (1, 1)),
		QuantDepthwiseConv2d((1, 12, 12, 384), (1, 3, 3, 384), (384,), (1, 12, 12, 384), (1, 1)),
		QuantConv2d((1, 12, 12, 384), (384, 1, 1, 384), (384,), (1, 12, 12, 384), (1, 1)),
		QuantDepthwiseConv2d((1, 12, 12, 384), (1, 3, 3, 384), (384,), (1, 12, 12, 384), (1, 1)),
		QuantConv2d((1, 12, 12, 384), (384, 1, 1, 384), (384,), (1, 12, 12, 384), (1, 1)),
		QuantDepthwiseConv2d((1, 12, 12, 384), (1, 3, 3, 384), (384,), (1, 12, 12, 384), (1, 1)),
		QuantConv2d((1, 12, 12, 384), (384, 1, 1, 384), (384,), (1, 12, 12, 384), (1, 1)),
		QuantDepthwiseConv2d((1, 12, 12, 384), (1, 3, 3, 384), (384,), (1, 12, 12, 384), (1, 1)),
		QuantConv2d((1, 12, 12, 384), (384, 1, 1, 384), (384,), (1, 12, 12, 384), (1, 1)),
		QuantDepthwiseConv2d((1, 12, 12, 384), (1, 3, 3, 384), (384,), (1, 12, 12, 384), (1, 1)),
		QuantConv2d((1, 12, 12, 384), (384, 1, 1, 384), (384,), (1, 12, 12, 384), (1, 1)),
		QuantDepthwiseConv2d((1, 12, 12, 384), (1, 3, 3, 384), (384,), (1, 6, 6, 384), (2, 2)),
		QuantConv2d((1, 6, 6, 384), (768, 1, 1, 384), (768,), (1, 6, 6, 768), (1, 1)),
		QuantDepthwiseConv2d((1, 6, 6, 768), (1, 3, 3, 768), (768,), (1, 6, 6, 768), (1, 1)),
		QuantConv2d((1, 6, 6, 768), (768, 1, 1, 768), (768,), (1, 6, 6, 768), (1, 1)),
		QuantAveragePool2d((1, 6, 6, 768), (1, 1, 1, 768), (6, 6)),
		QuantConv2d((1, 1, 1, 768), (1001, 1, 1, 768), (1001,), (1, 1, 1, 1001), (1, 1)),
		QuantReshape((1, 1, 1, 1001), (2,), (1, 1001)),
		QuantSoftmax((1, 1001), (1, 1001))
	]
if network == 'v1_0.75_224':
	layers = [
		QuantConv2d((1, 224, 224, 3), (24, 3, 3, 3), (24,), (1, 112, 112, 24), (2, 2)),
		QuantDepthwiseConv2d((1, 112, 112, 24), (1, 3, 3, 24), (24,), (1, 112, 112, 24), (1, 1)),
		QuantConv2d((1, 112, 112, 24), (48, 1, 1, 24), (48,), (1, 112, 112, 48), (1, 1)),
		QuantDepthwiseConv2d((1, 112, 112, 48), (1, 3, 3, 48), (48,), (1, 56, 56, 48), (2, 2)),
		QuantConv2d((1, 56, 56, 48), (96, 1, 1, 48), (96,), (1, 56, 56, 96), (1, 1)),
		QuantDepthwiseConv2d((1, 56, 56, 96), (1, 3, 3, 96), (96,), (1, 56, 56, 96), (1, 1)),
		QuantConv2d((1, 56, 56, 96), (96, 1, 1, 96), (96,), (1, 56, 56, 96), (1, 1)),
		QuantDepthwiseConv2d((1, 56, 56, 96), (1, 3, 3, 96), (96,), (1, 28, 28, 96), (2, 2)),
		QuantConv2d((1, 28, 28, 96), (192, 1, 1, 96), (192,), (1, 28, 28, 192), (1, 1)),
		QuantDepthwiseConv2d((1, 28, 28, 192), (1, 3, 3, 192), (192,), (1, 28, 28, 192), (1, 1)),
		QuantConv2d((1, 28, 28, 192), (192, 1, 1, 192), (192,), (1, 28, 28, 192), (1, 1)),
		QuantDepthwiseConv2d((1, 28, 28, 192), (1, 3, 3, 192), (192,), (1, 14, 14, 192), (2, 2)),
		QuantConv2d((1, 14, 14, 192), (384, 1, 1, 192), (384,), (1, 14, 14, 384), (1, 1)),
		QuantDepthwiseConv2d((1, 14, 14, 384), (1, 3, 3, 384), (384,), (1, 14, 14, 384), (1, 1)),
		QuantConv2d((1, 14, 14, 384), (384, 1, 1, 384), (384,), (1, 14, 14, 384), (1, 1)),
		QuantDepthwiseConv2d((1, 14, 14, 384), (1, 3, 3, 384), (384,), (1, 14, 14, 384), (1, 1)),
		QuantConv2d((1, 14, 14, 384), (384, 1, 1, 384), (384,), (1, 14, 14, 384), (1, 1)),
		QuantDepthwiseConv2d((1, 14, 14, 384), (1, 3, 3, 384), (384,), (1, 14, 14, 384), (1, 1)),
		QuantConv2d((1, 14, 14, 384), (384, 1, 1, 384), (384,), (1, 14, 14, 384), (1, 1)),
		QuantDepthwiseConv2d((1, 14, 14, 384), (1, 3, 3, 384), (384,), (1, 14, 14, 384), (1, 1)),
		QuantConv2d((1, 14, 14, 384), (384, 1, 1, 384), (384,), (1, 14, 14, 384), (1, 1)),
		QuantDepthwiseConv2d((1, 14, 14, 384), (1, 3, 3, 384), (384,), (1, 14, 14, 384), (1, 1)),
		QuantConv2d((1, 14, 14, 384), (384, 1, 1, 384), (384,), (1, 14, 14, 384), (1, 1)),
		QuantDepthwiseConv2d((1, 14, 14, 384), (1, 3, 3, 384), (384,), (1, 7, 7, 384), (2, 2)),
		QuantConv2d((1, 7, 7, 384), (768, 1, 1, 384), (768,), (1, 7, 7, 768), (1, 1)),
		QuantDepthwiseConv2d((1, 7, 7, 768), (1, 3, 3, 768), (768,), (1, 7, 7, 768), (1, 1)),
		QuantConv2d((1, 7, 7, 768), (768, 1, 1, 768), (768,), (1, 7, 7, 768), (1, 1)),
		QuantAveragePool2d((1, 7, 7, 768), (1, 1, 1, 768), (7, 7)),
		QuantConv2d((1, 1, 1, 768), (1001, 1, 1, 768), (1001,), (1, 1, 1, 1001), (1, 1)),
		QuantReshape((1, 1, 1, 1001), (2,), (1, 1001)),
		QuantSoftmax((1, 1001), (1, 1001))
	]
if network == 'v1_1.0_128':
	layers = [
		QuantConv2d((1, 128, 128, 3), (32, 3, 3, 3), (32,), (1, 64, 64, 32), (2, 2)),
		QuantDepthwiseConv2d((1, 64, 64, 32), (1, 3, 3, 32), (32,), (1, 64, 64, 32), (1, 1)),
		QuantConv2d((1, 64, 64, 32), (64, 1, 1, 32), (64,), (1, 64, 64, 64), (1, 1)),
		QuantDepthwiseConv2d((1, 64, 64, 64), (1, 3, 3, 64), (64,), (1, 32, 32, 64), (2, 2)),
		QuantConv2d((1, 32, 32, 64), (128, 1, 1, 64), (128,), (1, 32, 32, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 32, 32, 128), (1, 3, 3, 128), (128,), (1, 32, 32, 128), (1, 1)),
		QuantConv2d((1, 32, 32, 128), (128, 1, 1, 128), (128,), (1, 32, 32, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 32, 32, 128), (1, 3, 3, 128), (128,), (1, 16, 16, 128), (2, 2)),
		QuantConv2d((1, 16, 16, 128), (256, 1, 1, 128), (256,), (1, 16, 16, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 16, 16, 256), (1, 3, 3, 256), (256,), (1, 16, 16, 256), (1, 1)),
		QuantConv2d((1, 16, 16, 256), (256, 1, 1, 256), (256,), (1, 16, 16, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 16, 16, 256), (1, 3, 3, 256), (256,), (1, 8, 8, 256), (2, 2)),
		QuantConv2d((1, 8, 8, 256), (512, 1, 1, 256), (512,), (1, 8, 8, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 8, 8, 512), (1, 3, 3, 512), (512,), (1, 8, 8, 512), (1, 1)),
		QuantConv2d((1, 8, 8, 512), (512, 1, 1, 512), (512,), (1, 8, 8, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 8, 8, 512), (1, 3, 3, 512), (512,), (1, 8, 8, 512), (1, 1)),
		QuantConv2d((1, 8, 8, 512), (512, 1, 1, 512), (512,), (1, 8, 8, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 8, 8, 512), (1, 3, 3, 512), (512,), (1, 8, 8, 512), (1, 1)),
		QuantConv2d((1, 8, 8, 512), (512, 1, 1, 512), (512,), (1, 8, 8, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 8, 8, 512), (1, 3, 3, 512), (512,), (1, 8, 8, 512), (1, 1)),
		QuantConv2d((1, 8, 8, 512), (512, 1, 1, 512), (512,), (1, 8, 8, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 8, 8, 512), (1, 3, 3, 512), (512,), (1, 8, 8, 512), (1, 1)),
		QuantConv2d((1, 8, 8, 512), (512, 1, 1, 512), (512,), (1, 8, 8, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 8, 8, 512), (1, 3, 3, 512), (512,), (1, 4, 4, 512), (2, 2)),
		QuantConv2d((1, 4, 4, 512), (1024, 1, 1, 512), (1024,), (1, 4, 4, 1024), (1, 1)),
		QuantDepthwiseConv2d((1, 4, 4, 1024), (1, 3, 3, 1024), (1024,), (1, 4, 4, 1024), (1, 1)),
		QuantConv2d((1, 4, 4, 1024), (1024, 1, 1, 1024), (1024,), (1, 4, 4, 1024), (1, 1)),
		QuantAveragePool2d((1, 4, 4, 1024), (1, 1, 1, 1024), (4, 4)),
		QuantConv2d((1, 1, 1, 1024), (1001, 1, 1, 1024), (1001,), (1, 1, 1, 1001), (1, 1)),
		QuantReshape((1, 1, 1, 1001), (2,), (1, 1001)),
		QuantSoftmax((1, 1001), (1, 1001))
	]
if network == 'v1_1.0_160':
	layers = [
		QuantConv2d((1, 160, 160, 3), (32, 3, 3, 3), (32,), (1, 80, 80, 32), (2, 2)),
		QuantDepthwiseConv2d((1, 80, 80, 32), (1, 3, 3, 32), (32,), (1, 80, 80, 32), (1, 1)),
		QuantConv2d((1, 80, 80, 32), (64, 1, 1, 32), (64,), (1, 80, 80, 64), (1, 1)),
		QuantDepthwiseConv2d((1, 80, 80, 64), (1, 3, 3, 64), (64,), (1, 40, 40, 64), (2, 2)),
		QuantConv2d((1, 40, 40, 64), (128, 1, 1, 64), (128,), (1, 40, 40, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 40, 40, 128), (1, 3, 3, 128), (128,), (1, 40, 40, 128), (1, 1)),
		QuantConv2d((1, 40, 40, 128), (128, 1, 1, 128), (128,), (1, 40, 40, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 40, 40, 128), (1, 3, 3, 128), (128,), (1, 20, 20, 128), (2, 2)),
		QuantConv2d((1, 20, 20, 128), (256, 1, 1, 128), (256,), (1, 20, 20, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 20, 20, 256), (1, 3, 3, 256), (256,), (1, 20, 20, 256), (1, 1)),
		QuantConv2d((1, 20, 20, 256), (256, 1, 1, 256), (256,), (1, 20, 20, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 20, 20, 256), (1, 3, 3, 256), (256,), (1, 10, 10, 256), (2, 2)),
		QuantConv2d((1, 10, 10, 256), (512, 1, 1, 256), (512,), (1, 10, 10, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 10, 10, 512), (1, 3, 3, 512), (512,), (1, 10, 10, 512), (1, 1)),
		QuantConv2d((1, 10, 10, 512), (512, 1, 1, 512), (512,), (1, 10, 10, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 10, 10, 512), (1, 3, 3, 512), (512,), (1, 10, 10, 512), (1, 1)),
		QuantConv2d((1, 10, 10, 512), (512, 1, 1, 512), (512,), (1, 10, 10, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 10, 10, 512), (1, 3, 3, 512), (512,), (1, 10, 10, 512), (1, 1)),
		QuantConv2d((1, 10, 10, 512), (512, 1, 1, 512), (512,), (1, 10, 10, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 10, 10, 512), (1, 3, 3, 512), (512,), (1, 10, 10, 512), (1, 1)),
		QuantConv2d((1, 10, 10, 512), (512, 1, 1, 512), (512,), (1, 10, 10, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 10, 10, 512), (1, 3, 3, 512), (512,), (1, 10, 10, 512), (1, 1)),
		QuantConv2d((1, 10, 10, 512), (512, 1, 1, 512), (512,), (1, 10, 10, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 10, 10, 512), (1, 3, 3, 512), (512,), (1, 5, 5, 512), (2, 2)),
		QuantConv2d((1, 5, 5, 512), (1024, 1, 1, 512), (1024,), (1, 5, 5, 1024), (1, 1)),
		QuantDepthwiseConv2d((1, 5, 5, 1024), (1, 3, 3, 1024), (1024,), (1, 5, 5, 1024), (1, 1)),
		QuantConv2d((1, 5, 5, 1024), (1024, 1, 1, 1024), (1024,), (1, 5, 5, 1024), (1, 1)),
		QuantAveragePool2d((1, 5, 5, 1024), (1, 1, 1, 1024), (5, 5)),
		QuantConv2d((1, 1, 1, 1024), (1001, 1, 1, 1024), (1001,), (1, 1, 1, 1001), (1, 1)),
		QuantReshape((1, 1, 1, 1001), (2,), (1, 1001)),
		QuantSoftmax((1, 1001), (1, 1001))
	]
if network == 'v1_1.0_192':
	layers = [
		QuantConv2d((1, 192, 192, 3), (32, 3, 3, 3), (32,), (1, 96, 96, 32), (2, 2)),
		QuantDepthwiseConv2d((1, 96, 96, 32), (1, 3, 3, 32), (32,), (1, 96, 96, 32), (1, 1)),
		QuantConv2d((1, 96, 96, 32), (64, 1, 1, 32), (64,), (1, 96, 96, 64), (1, 1)),
		QuantDepthwiseConv2d((1, 96, 96, 64), (1, 3, 3, 64), (64,), (1, 48, 48, 64), (2, 2)),
		QuantConv2d((1, 48, 48, 64), (128, 1, 1, 64), (128,), (1, 48, 48, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 48, 48, 128), (1, 3, 3, 128), (128,), (1, 48, 48, 128), (1, 1)),
		QuantConv2d((1, 48, 48, 128), (128, 1, 1, 128), (128,), (1, 48, 48, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 48, 48, 128), (1, 3, 3, 128), (128,), (1, 24, 24, 128), (2, 2)),
		QuantConv2d((1, 24, 24, 128), (256, 1, 1, 128), (256,), (1, 24, 24, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 24, 24, 256), (1, 3, 3, 256), (256,), (1, 24, 24, 256), (1, 1)),
		QuantConv2d((1, 24, 24, 256), (256, 1, 1, 256), (256,), (1, 24, 24, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 24, 24, 256), (1, 3, 3, 256), (256,), (1, 12, 12, 256), (2, 2)),
		QuantConv2d((1, 12, 12, 256), (512, 1, 1, 256), (512,), (1, 12, 12, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 12, 12, 512), (1, 3, 3, 512), (512,), (1, 12, 12, 512), (1, 1)),
		QuantConv2d((1, 12, 12, 512), (512, 1, 1, 512), (512,), (1, 12, 12, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 12, 12, 512), (1, 3, 3, 512), (512,), (1, 12, 12, 512), (1, 1)),
		QuantConv2d((1, 12, 12, 512), (512, 1, 1, 512), (512,), (1, 12, 12, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 12, 12, 512), (1, 3, 3, 512), (512,), (1, 12, 12, 512), (1, 1)),
		QuantConv2d((1, 12, 12, 512), (512, 1, 1, 512), (512,), (1, 12, 12, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 12, 12, 512), (1, 3, 3, 512), (512,), (1, 12, 12, 512), (1, 1)),
		QuantConv2d((1, 12, 12, 512), (512, 1, 1, 512), (512,), (1, 12, 12, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 12, 12, 512), (1, 3, 3, 512), (512,), (1, 12, 12, 512), (1, 1)),
		QuantConv2d((1, 12, 12, 512), (512, 1, 1, 512), (512,), (1, 12, 12, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 12, 12, 512), (1, 3, 3, 512), (512,), (1, 6, 6, 512), (2, 2)),
		QuantConv2d((1, 6, 6, 512), (1024, 1, 1, 512), (1024,), (1, 6, 6, 1024), (1, 1)),
		QuantDepthwiseConv2d((1, 6, 6, 1024), (1, 3, 3, 1024), (1024,), (1, 6, 6, 1024), (1, 1)),
		QuantConv2d((1, 6, 6, 1024), (1024, 1, 1, 1024), (1024,), (1, 6, 6, 1024), (1, 1)),
		QuantAveragePool2d((1, 6, 6, 1024), (1, 1, 1, 1024), (6, 6)),
		QuantConv2d((1, 1, 1, 1024), (1001, 1, 1, 1024), (1001,), (1, 1, 1, 1001), (1, 1)),
		QuantReshape((1, 1, 1, 1001), (2,), (1, 1001)),
		QuantSoftmax((1, 1001), (1, 1001))
	]
if network == 'v1_1.0_224':
	layers = [
		QuantConv2d((1, 224, 224, 3), (32, 3, 3, 3), (32,), (1, 112, 112, 32), (2, 2)),
		QuantDepthwiseConv2d((1, 112, 112, 32), (1, 3, 3, 32), (32,), (1, 112, 112, 32), (1, 1)),
		QuantConv2d((1, 112, 112, 32), (64, 1, 1, 32), (64,), (1, 112, 112, 64), (1, 1)),
		QuantDepthwiseConv2d((1, 112, 112, 64), (1, 3, 3, 64), (64,), (1, 56, 56, 64), (2, 2)),
		QuantConv2d((1, 56, 56, 64), (128, 1, 1, 64), (128,), (1, 56, 56, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 56, 56, 128), (1, 3, 3, 128), (128,), (1, 56, 56, 128), (1, 1)),
		QuantConv2d((1, 56, 56, 128), (128, 1, 1, 128), (128,), (1, 56, 56, 128), (1, 1)),
		QuantDepthwiseConv2d((1, 56, 56, 128), (1, 3, 3, 128), (128,), (1, 28, 28, 128), (2, 2)),
		QuantConv2d((1, 28, 28, 128), (256, 1, 1, 128), (256,), (1, 28, 28, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 28, 28, 256), (1, 3, 3, 256), (256,), (1, 28, 28, 256), (1, 1)),
		QuantConv2d((1, 28, 28, 256), (256, 1, 1, 256), (256,), (1, 28, 28, 256), (1, 1)),
		QuantDepthwiseConv2d((1, 28, 28, 256), (1, 3, 3, 256), (256,), (1, 14, 14, 256), (2, 2)),
		QuantConv2d((1, 14, 14, 256), (512, 1, 1, 256), (512,), (1, 14, 14, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 14, 14, 512), (1, 3, 3, 512), (512,), (1, 14, 14, 512), (1, 1)),
		QuantConv2d((1, 14, 14, 512), (512, 1, 1, 512), (512,), (1, 14, 14, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 14, 14, 512), (1, 3, 3, 512), (512,), (1, 14, 14, 512), (1, 1)),
		QuantConv2d((1, 14, 14, 512), (512, 1, 1, 512), (512,), (1, 14, 14, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 14, 14, 512), (1, 3, 3, 512), (512,), (1, 14, 14, 512), (1, 1)),
		QuantConv2d((1, 14, 14, 512), (512, 1, 1, 512), (512,), (1, 14, 14, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 14, 14, 512), (1, 3, 3, 512), (512,), (1, 14, 14, 512), (1, 1)),
		QuantConv2d((1, 14, 14, 512), (512, 1, 1, 512), (512,), (1, 14, 14, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 14, 14, 512), (1, 3, 3, 512), (512,), (1, 14, 14, 512), (1, 1)),
		QuantConv2d((1, 14, 14, 512), (512, 1, 1, 512), (512,), (1, 14, 14, 512), (1, 1)),
		QuantDepthwiseConv2d((1, 14, 14, 512), (1, 3, 3, 512), (512,), (1, 7, 7, 512), (2, 2)),
		QuantConv2d((1, 7, 7, 512), (1024, 1, 1, 512), (1024,), (1, 7, 7, 1024), (1, 1)),
		QuantDepthwiseConv2d((1, 7, 7, 1024), (1, 3, 3, 1024), (1024,), (1, 7, 7, 1024), (1, 1)),
		QuantConv2d((1, 7, 7, 1024), (1024, 1, 1, 1024), (1024,), (1, 7, 7, 1024), (1, 1)),
		QuantAveragePool2d((1, 7, 7, 1024), (1, 1, 1, 1024), (7, 7)),
		QuantConv2d((1, 1, 1, 1024), (1001, 1, 1, 1024), (1001,), (1, 1, 1, 1001), (1, 1)),
		QuantReshape((1, 1, 1, 1001), (2,), (1, 1001)),
		QuantSoftmax((1, 1001), (1, 1001))
	]

ConvBase.init_temp(layers)

for layer in layers:
    layer.input_from(0)

layers[0].X.input_from(1)

opt = Optimizer()
opt.layers = layers
start_timer(1)
opt.forward(1)
stop_timer(1)
